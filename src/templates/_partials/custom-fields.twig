{% import "_includes/forms" as forms %}


{% set typeOptions = [
    { 'label' : 'address', 'value' : 'address' },
    { 'label' : 'city', 'value' : 'city' },
    { 'label' : 'date', 'value' : 'date' },
    { 'label' : 'email', 'value' : 'email' },
    { 'label' : 'firstName', 'value' : 'firstName' },
    { 'label' : 'ip', 'value' : 'ip' },
    { 'label' : 'lastName', 'value' : 'lastName' },
    { 'label' : 'latitude', 'value' : 'latitude' },
    { 'label' : 'longitude', 'value' : 'longitude' },
    { 'label' : 'name', 'value' : 'name' },
    { 'label' : 'phoneNumber', 'value' : 'phoneNumber' },
    { 'label' : 'postcode', 'value' : 'postcode' },
    { 'label' : 'secondaryAddress', 'value' : 'secondaryAddress' },
    { 'label' : 'stateAbbr', 'value' : 'stateAbbr' },
    { 'label' : 'streetName', 'value' : 'streetName' },
    { 'label' : 'streetAddress', 'value' : 'streetAddress' },
    { 'label' : 'text', 'value' : 'text' },
    { 'label' : 'userName', 'value' : 'userName' },
    { 'label' : 'url', 'value' : 'url' },
    { 'label' : 'userAgent', 'value' : 'userAgent' },

    { 'label' : 'compressed', 'value' : 'compressed' },
    { 'label' : 'excel', 'value' : 'excel' },
    { 'label' : 'image', 'value' : 'image' },
    { 'label' : 'pdf', 'value' : 'pdf' },
    { 'label' : 'txt', 'value' : 'txt' },
    { 'label' : 'video', 'value' : 'video' },
    { 'label' : 'word', 'value' : 'word' },
    { 'label' : 'custom', 'value' : 'custom' }
]
%}

{% set textOptions = [
    { 'label' : 'address', 'value' : 'address' },
    { 'label' : 'city', 'value' : 'city' },
    { 'label' : 'date', 'value' : 'date' },
    { 'label' : 'email', 'value' : 'email' },
    { 'label' : 'name', 'value' : 'name' },
    { 'label' : 'stateAbbr', 'value' : 'stateAbbr' },
    { 'label' : 'streetAddress', 'value' : 'streetAddress' },
    { 'label' : 'text', 'value' : 'text' },
    { 'label' : 'userName', 'value' : 'userName' },
    { 'label' : 'custom', 'value' : 'custom' }
]
%}



{{ forms.editableTableField({
    label: "Custom Fields"|t('app'),
    instructions: "List of CraftCms fields to anonymize. Fill Custom value column if the field type is custom"|t('app'),
    id: 'custom_fields',
    name: 'custom_fields',
    cols: {
        handle: {
            type: 'select',
            heading: "Field Handle"|t('app'),
            options : fields_list, 
        },
        type: {
            type: 'select',
            heading: "Type"|t('app'),
            options : typeOptions,
            class : 'type-column',
        },
        value: {
            type: 'singleline',
            heading: "Custom value"|t('app'),
            class : 'custom-value-column',
        },
    }|filter,
    rows: settings.custom_fields,
    allowAdd: true,
    allowDelete: true,
}) }}

{{ forms.editableTableField({
    label: "Section Title"|t('app'),
    instructions: "List of CraftCms sections title to anonymize. Fill Custom value column if the field type is custom"|t('app'),
    id: 'section_title',
    name: 'section_title',
    cols: {
        handle: {
            type: 'select',
            heading: "Section Handle"|t('app'),
            options : sections_list,
        },
        slug: {
            type: 'checkbox',
            heading: "Also replace slug"|t('app'),
        },
        type: {
            type: 'select',
            heading: "Type"|t('app'),
            options : textOptions,
            class : 'type-column',
        },
        value: {
            type: 'singleline',
            heading: "Custom value"|t('app'),
            class : 'custom-value-column',
        },
    }|filter,
    rows: settings.section_title,
    allowAdd: true,
    allowDelete: true,
}) }}

{% css %}
    td {
        background-color: transparent;
        transition: background-color 200ms ease-in-out;
    }

    td:has(textarea[disabled]), td:has(textarea:disabled) {
        background-color: rgb(228, 237, 246) !important;
    }
{% endcss %}

{% js on ready %}
    var addBtns = document.querySelectorAll('#settings-tab-custom-fields .btn.add');
    addBtns.forEach(function(addBtn){
        addBtn.addEventListener('click', handleNewRow);
    });

    function disableAllTextarea() {
        var textareas = document.querySelectorAll('.custom-value-column textarea');
        textareas.forEach(function(textarea){
            if(textarea.parentElement.parentElement.querySelector('.type-column select').value !== 'custom'){
                textarea.disabled = "disabled";

            }
        });
    }
    disableAllTextarea();

    function addEventSelects() {
        var selects = document.querySelectorAll('.type-column select');
        selects.forEach(function(select){
            select.addEventListener('change', handleCustomValue);
        });
    }
    addEventSelects();

    function removeEventSelects() {
        var selects = document.querySelectorAll('.type-column select');
        selects.forEach(function(select){
            select.removeEventListener('change', handleCustomValue);
        });
    }

    function handleCustomValue(e) {
        if(e.currentTarget.value === 'custom') {
            e.currentTarget.parentElement.parentElement.parentElement.querySelector('.custom-value-column textarea').removeAttribute("disabled");
        } else {
            e.currentTarget.parentElement.parentElement.parentElement.querySelector('.custom-value-column textarea').disabled = "disabled";
            e.currentTarget.parentElement.parentElement.parentElement.querySelector('.custom-value-column textarea').value = '';
        }
    }

    function handleNewRow(e) {
        setTimeout(function () {
            disableAllTextarea();
            removeEventSelects();
            addEventSelects();
        }, 0);
        
    }
{% endjs %}
